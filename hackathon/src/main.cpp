#include <Arduino.h>
#include <ESP32Servo.h>
#include "LocalSensor.h"
#include "Encoder.h"
#include "DisplayManager.h"
//Code no longer generated by AI but by Noah Ross

#define DHTPININ 2
#define DHTPINEX 3
#define DHTTYPE DHT11
#define ENCODEPINCLK 4
#define ENCODEPINDT 5
#define ENCODEPINSW 6
#define OLED1PIN 7
#define OLED2PIN 8
#define SERVO_PIN 9

//Object instantiations
LocalSensor interiorSensor(DHTPININ, DHTTYPE);
LocalSensor exteriorSensor(DHTPINEX, DHTTYPE);
Encoder encoder(ENCODEPINCLK, ENCODEPINDT, ENCODEPINSW);
DisplayManager dispManage(128, 64, &Wire, -1);
Servo motor;

int servoAngle = 0;
bool windowOpened = false;

void setup() {
  //log to console, delay to avoid errors
  Serial.begin(115200);
  delay(2000);
  Serial.println("DHT Sensor Test with LED");

  //sensor initialize
  interiorSensor.begin();
  interiorSensor.update(true);

  exteriorSensor.begin();
  exteriorSensor.update(true);

  //motor initialize
  motor.attach(SERVO_PIN);
  motor.write(servoAngle);

  //display initialize
  dispManage.initDisplay();
}

void loop() {
  int TEMP_THRESHOLD = encoder.selectTemperature();

  // Read temperature and humidity
  double intTemperature = interiorSensor.getTemperature();
  double inthumidity = interiorSensor.getHumidity();
  double extTemperature = exteriorSensor.getTemperature();
  double extHumidity = exteriorSensor.getHumidity();

  // Print the results to the serial monitor
  Serial.println(intTemperature);
  Serial.println(extTemperature);

  // Check temperature and control LED
  if (intTemperature >= TEMP_THRESHOLD && extTemperature < intTemperature) {
    Serial.println("Temperature is above threshold!");
    if (!windowOpened) {
      servoAngle = 45;
      motor.write(servoAngle);
      windowOpened = true;
    }
  } else {
    Serial.println("Temperature is below threshold!");
    if (windowOpened) {
      servoAngle = 0;
      motor.write(servoAngle);
      windowOpened = false;
    }
  }

  if (intTemperature <= TEMP_THRESHOLD && extTemperature > intTemperature) {
    if (!windowOpened) {
      servoAngle = 45;
      motor.write(servoAngle);
      windowOpened = true;
    }
  } else {
    if (windowOpened) {
      servoAngle = 0;
      motor.write(servoAngle);
      windowOpened = false;
    }
  }

  dispManage.updateDisplay(intTemperature, extTemperature, TEMP_THRESHOLD);
  delay(5000); // Wait 5 seconds before next reading
}
